{"version":3,"sources":["if.js","header.js","footer.js","form.js","results.js","history.js","app.js","index.js"],"names":["render","condition","children","IfRenderer","props","React","Children","map","child","cloneElement","Then","Else","Header","to","activeClassName","Component","Footer","Form","handleClick","e","a","toggleLoading","url","document","getElementById","value","words","method","all","push","fetch","state","options","then","raw","json","data","headers","key","metodeUrlObj","includes","headersArr","methodArr","bodyArr","idx","urlArr","length","metodeUrlObjID","localStorage","setItem","JSON","stringify","handler","show","setTimeout","catch","msg1","msg2","msg3","get","getElementsByClassName","removeAttribute","target","setAttribute","headertype","headerValue","setState","post","mode","body","put","delete","handleBody","handleHeader","handleHeaderType","headerType","id","for","onClick","this","checked","type","name","onChange","rows","cols","class","Results","getFormLocalStorage","content","textContent","methodFromButton","split","urlFromButton","metodeUrlObjFromLocal","parse","getItem","metodeUrlObjIDFromLocal","x","indexOf","headersFromLocal","methodFromLocal","bodyFromLocal","URLFromLocal","click","className","loading","indx","results","History","uu","fill","App","handleForm","toggleModal","open","Fragment","path","exact","Main","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.9556d2c1.chunk.js","sourcesContent":["import React from 'react';\n\nconst render = (condition = false , children = null) => {\n    return condition ? children : null;\n};\n\n// IfRenderer component\nexport const IfRenderer = props => \n    React.Children.map(props.children, child =>\n        React.cloneElement(child, {condition: props.condition})\n    ); \n\n// Then component \nexport const Then = props => render(props.condition, props.children);\n\n// Else component\nexport const Else = props => render(!props.condition, props.children);","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport './styles/header.scss';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <NavLink to=\"/history\" activeClassName=\"history\">History</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\n\n\nexport default Header;","import React from 'react';\nimport './styles/footer.scss'\n\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy;2021 Ruwaid</footer>;\n  }\n}\n\nexport default Footer;","import React from 'react';\n\n\nimport './styles/form.scss'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            words: 'initial State',\n            options: {},\n            headersArr: [],\n            methodArr: [],\n            bodyArr: [],\n            urlArr: [],\n            metodeUrlObj: {\n                'GET': [],\n                'POST': [],\n                'PUT': [],\n                'DELETE': [],\n            },\n            metodeUrlObjID: {\n                'GET': [],\n                'POST': [],\n                'PUT': [],\n                'DELETE': [],\n            },\n            data: {},\n            headerValue: '',\n            headerType: ''\n        };\n        this.url = '';\n        this.method = 'GET';\n\n    }\n\n    handleClick = async e => {\n        this.props.toggleLoading();\n\n        this.url = document.getElementById('url').value;\n        let words = `${this.method}!${this.url}`;\n        this.props.all.push({ words });\n\n\n\n        fetch(`${this.url}`, this.state.options).then(async (raw) => {\n            let data = await raw.json();\n            let all = this.props.all;\n            \n            // let headers = raw.headers.get('content-type');\n            let headers = {};\n            for (let [key, value] of raw.headers) {\n              headers[key] = value;\n            }\n\n            if (!this.state.metodeUrlObj[this.method].includes(this.url)) {\n                this.state.headersArr.push(headers);\n                this.state.methodArr.push(this.method);\n                this.state.bodyArr.push(data);\n                let idx = this.state.urlArr.length;\n                this.state.urlArr.push(this.url);\n                this.state.metodeUrlObj[`${this.method}`].push(`${this.url}`);\n                this.state.metodeUrlObjID[`${this.method}`].push(`${idx}`);\n            }\n\n\n\n            localStorage.setItem('headers-state', JSON.stringify(this.state.headersArr));\n            localStorage.setItem('method-state', JSON.stringify(this.state.methodArr));\n            localStorage.setItem('body-state', JSON.stringify(this.state.bodyArr));\n            localStorage.setItem('URL-state', JSON.stringify(this.state.urlArr));\n            localStorage.setItem('Method-URL-state', JSON.stringify(this.state.metodeUrlObj));\n            localStorage.setItem('Method-URL-ID-state', JSON.stringify(this.state.metodeUrlObjID));\n\n            this.props.handler(data, all, headers);\n            this.props.show(true)\n            // no need for settimeout just to see the loader because loader is coooool \n            setTimeout(() => {\n                this.props.toggleLoading();\n\n            }, 1000);\n\n        }).catch((e) => {\n            this.props.handler({\n                msg1: 'Error Error Error',\n                msg2: 'maybe you do not have access',\n                msg3: 'maybe your request is wrooong',\n            }, this.props.all, null);\n\n            this.props.toggleLoading();\n        });\n    }\n\n    get = e => {\n        this.method = 'GET'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${this.state.headertype} ${this.state.headerValue}`\n            },\n        }\n        this.setState({ options })\n    }\n\n    post = e => {\n        this.method = 'POST'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': `${this.state.headertype} ${this.state.headerValue}`\n            },\n            mode: 'cors',\n            body: JSON.stringify(this.state.data),\n        }\n        this.setState({ options })\n    }\n\n    put = e => {\n        this.method = 'PUT'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': `${this.state.headertype} ${this.state.headerValue}`\n\n            },\n            mode: 'cors',\n            body: JSON.stringify(this.state.data),\n        }\n        this.setState({ options })\n    }\n\n    delete = e => {\n        this.method = 'DELETE'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${this.state.headertype} ${this.state.headerValue}`\n\n            },\n        }\n        this.setState({ options })\n    }\n    handleBody = e => {\n        this.setState({ data: e.target.value });\n    }\n\n    handleHeader = e => {\n        this.setState({ headerValue: e.target.value })\n    }\n\n    handleHeaderType = e => {\n        this.setState({ headertype: e.target.value })\n    }\n\n    render() {\n\n        return (\n            <div id='form'>\n                <div id='main-header'>\n                    <div id='url-div'>\n                        <label for='url'>URL:</label>\n                        <input id='url'></input>\n                        <button onClick={this.handleClick}>GO!</button>\n\n                        <div id='header'>\n                            <label > Header</label>\n                            <br></br>\n                            <label for=\"Basic\">Basic</label>\n                            <input checked type=\"radio\" id=\"Basic\" name=\"auth\" value=\"Basic\" onChange={this.handleHeaderType}></input>\n                            <label for=\"Bearer\">Bearer</label>\n                            <input type=\"radio\" id=\"Bearer\" name=\"auth\" value=\"Bearer\" onChange={this.handleHeaderType}></input>\n                            <br></br>\n                            <input id=\"headerValue\" onChange={this.handleHeader}></input>\n                        </div>\n\n\n                        <label id='textarea'>\n                            Body\n                        <textarea rows=\"4\" cols=\"50\" onChange={this.handleBody} ></textarea>\n                        </label>\n\n                    </div>\n\n                    <div id='buttons'>\n                        <button id='GET' class='aqua' onClick={this.get}>GET</button>\n                        <button id='POST' onClick={this.post}>POST</button>\n                        <button id='PUT' onClick={this.put}>PUT</button>\n                        <button id='DELETE' onClick={this.delete}>DELETE</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport './styles/results.scss'\n\nclass Results extends React.Component {\n\n  getFormLocalStorage = e => {\n    let content = e.target.textContent;\n    let methodFromButton = content.split('!')[0];\n    let urlFromButton = content.split('!')[1];\n\n    let metodeUrlObjFromLocal = JSON.parse(localStorage.getItem('Method-URL-state'));\n    let metodeUrlObjIDFromLocal = JSON.parse(localStorage.getItem('Method-URL-ID-state'));\n\n    let x = metodeUrlObjFromLocal[methodFromButton].indexOf(urlFromButton)\n    if (x === -1) {\n      this.props.handler({\n        msg1: 'Error Error Error',\n        msg2: 'maybe you do not have access',\n        msg3: 'maybe your request is wrooong',\n      }, this.props.all, null);\n    } else {\n\n      let idx = metodeUrlObjIDFromLocal[methodFromButton][x]\n\n\n      let headersFromLocal = JSON.parse(localStorage.getItem('headers-state'))[idx];\n      let methodFromLocal = JSON.parse(localStorage.getItem('method-state'))[idx];\n      let bodyFromLocal = JSON.parse(localStorage.getItem('body-state'))[idx];\n      let URLFromLocal = JSON.parse(localStorage.getItem('URL-state'))[idx];\n\n      document.getElementById('url').value = URLFromLocal;\n      document.getElementById(`${methodFromLocal}`).click();\n\n      // let lowerCaseMethod = methodFromLocal.toLowerCase();\n      // this[`${lowerCaseMethod}`]();\n\n      this.props.handler(bodyFromLocal, this.props.all, headersFromLocal);\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className={`loading-${this.props.loading}`}>\n          <h1>\n            <span>L</span>\n            <span>O</span>\n            <span>A</span>\n            <span>D</span>\n            <span>I</span>\n            <span>N</span>\n            <span>G</span>\n\n            <span>.</span>\n            <span>.</span>\n            <span>.</span>\n          </h1>\n\n        </div>\n        <div id='content'>\n          <div id='history'>\n            {this.props.all.map((e, indx) => {\n              return (\n                <button\n                  id={indx} key={indx} onClick={this.getFormLocalStorage}\n                >\n                  {e.words}\n                </button>\n              )\n            })}\n          </div>\n          <div>\n            \"Headers\":\n          <pre>\n              {JSON.stringify(this.props.headers, null, 2)}\n            </pre>\n\n          \"Response\":\n          <pre>\n              {JSON.stringify(this.props.results, null, 2)}\n            </pre>\n          </div>\n        </div >\n      </>\n    )\n  }\n}\n\nexport default Results;","import React from 'react';\nimport './styles/results.scss'\n\nimport { Link } from \"react-router-dom\";\n\nclass History extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: {},\n      headers: {},\n\n    }\n  }\n\n  uu = e => {\n    let id = e.target.id;\n    this.props.fill(id);\n  }\n\n  getFormLocalStorage = e => {\n    let content = e.target.textContent;\n    let methodFromButton = content.split('!')[0];\n    let urlFromButton = content.split('!')[1];\n\n    let metodeUrlObjFromLocal = JSON.parse(localStorage.getItem('Method-URL-state'));\n    let metodeUrlObjIDFromLocal = JSON.parse(localStorage.getItem('Method-URL-ID-state'));\n\n    let x = metodeUrlObjFromLocal[methodFromButton].indexOf(urlFromButton)\n    let idx = metodeUrlObjIDFromLocal[methodFromButton][x]\n\n    let headersFromLocal = JSON.parse(localStorage.getItem('headers-state'))[idx];\n    let bodyFromLocal = JSON.parse(localStorage.getItem('body-state'))[idx];\n    this.setState({ results: bodyFromLocal, headers: headersFromLocal })\n  }\n\n\n\n  render() {\n    return (\n      <div id='content'>\n        <div id='history'>\n          {this.props.all.map((e, indx) => {\n            return (\n              <div>\n                <button\n                  id={indx}\n                  key={indx}\n                  onClick={this.getFormLocalStorage}\n                >\n                  {e.words}\n                </button>\n                {<Link to=\"/\" id={indx} onClick={this.uu} >RE-Run</Link>}\n              </div>\n            )\n          })}\n        </div>\n        <div>\n          \"Headers\":\n          <pre>\n            {JSON.stringify(this.state.headers, null, 2)}\n          </pre>\n\n          \"Response\":\n          <pre>\n            {JSON.stringify(this.state.results, null, 2)}\n          </pre>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default History;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n\nimport { IfRenderer, Then, Else } from './if';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport Results from './results';\nimport History from './history';\nimport './styles/results.scss'\nimport './styles/style.scss';\n\n\n//class App\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            results: {},\n            all: [],\n            headers: '',\n            open: false,\n            loading: false,\n            id: '',\n        };\n    }\n    handleForm = (results, all, headers) => {\n        this.setState({ results, all, headers });\n    }\n\n    toggleModal = (open) => {\n        this.setState({ open });\n    }\n\n    toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n    fill = (id) => {\n        this.setState({ id })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <Route path=\"/\" exact>\n                    <Form url={this.state.url} all={this.state.all} show={this.toggleModal} handler={this.handleForm} toggleLoading={this.toggleLoading} />\n                    <IfRenderer condition={this.state.open} >\n                        <Then>\n                            <Results  fill={this.fill} id={this.state.id}  handler={this.handleForm} results={this.state.results} all={this.state.all} headers={this.state.headers} loading={this.state.loading} />\n                        </Then>\n                        <Else>\n                            <div id='content'></div>\n                        </Else>\n                    </IfRenderer>\n                </Route>\n\n                <Route path=\"/history\" exact>\n                    <History fill={this.fill} all={this.state.all} />\n                </Route>\n                <Footer />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>);\n  }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}