{"version":3,"sources":["if.js","header.js","footer.js","form.js","results.js","history.js","app.js","index.js"],"names":["render","condition","children","IfRenderer","props","React","Children","map","child","cloneElement","Then","Else","Header","to","activeClassName","Component","Footer","Form","handleClick","e","a","toggleLoading","url","document","getElementById","value","words","method","fetch","state","options","then","raw","json","data","all","headers","get","push","metodeUrlObj","includes","headersArr","methodArr","bodyArr","idx","urlArr","length","metodeUrlObjID","localStorage","setItem","JSON","stringify","handler","show","setTimeout","catch","msg1","msg2","msg3","getElementsByClassName","removeAttribute","target","setAttribute","setState","post","mode","body","put","delete","console","log","id","for","onClick","this","class","Results","getFormLocalStorage","content","textContent","methodFromButton","split","urlFromButton","metodeUrlObjFromLocal","parse","getItem","metodeUrlObjIDFromLocal","x","indexOf","headersFromLocal","methodFromLocal","bodyFromLocal","URLFromLocal","click","className","loading","indx","key","results","History","uu","fill","App","handleForm","toggleModal","open","Fragment","path","exact","Main","rootElement","ReactDOM"],"mappings":"mUAEMA,EAAS,WAA0C,IAAzCC,EAAwC,wDAApBC,EAAoB,uDAAT,KAC3C,OAAOD,EAAYC,EAAW,MAIrBC,EAAa,SAAAC,GAAK,OAC3BC,IAAMC,SAASC,IAAIH,EAAMF,UAAU,SAAAM,GAAK,OACpCH,IAAMI,aAAaD,EAAO,CAACP,UAAWG,EAAMH,gBAIvCS,EAAO,SAAAN,GAAK,OAAIJ,EAAOI,EAAMH,UAAWG,EAAMF,WAG9CS,EAAO,SAAAP,GAAK,OAAIJ,GAAQI,EAAMH,UAAWG,EAAMF,WCY7CU,G,6KApBX,OACE,gCACE,qCACA,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAWC,gBAAgB,WAAvC,mB,GAXOT,IAAMU,YCIZC,G,6KAJX,OAAO,uD,GAFUX,IAAMU,Y,yBCgLZE,G,wDA9KX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IA0BVc,YA3BmB,uCA2BL,WAAMC,GAAN,eAAAC,EAAA,sDACV,EAAKhB,MAAMiB,gBAEX,EAAKC,IAAMC,SAASC,eAAe,OAAOC,MACtCC,EAJM,UAIK,EAAKC,OAJV,YAIoB,EAAKL,KAInCM,MAAM,GAAD,OAAI,EAAKN,KAAO,EAAKO,MAAMC,SAASC,KAAzC,uCAA8C,WAAOC,GAAP,qBAAAZ,EAAA,sEACzBY,EAAIC,OADqB,OACtCC,EADsC,OAEtCC,EAAM,EAAK/B,MAAM+B,IACjBC,EAAUJ,EAAII,QAAQC,IAAI,gBAC9B,EAAKjC,MAAM+B,IAAIG,KAAK,CAAEZ,UAEjB,EAAKG,MAAMU,aAAa,EAAKZ,QAAQa,SAAS,EAAKlB,OACpD,EAAKO,MAAMY,WAAWH,KAAKF,GAC3B,EAAKP,MAAMa,UAAUJ,KAAK,EAAKX,QAC/B,EAAKE,MAAMc,QAAQL,KAAKJ,GACpBU,EAAM,EAAKf,MAAMgB,OAAOC,OAC5B,EAAKjB,MAAMgB,OAAOP,KAAK,EAAKhB,KAC5B,EAAKO,MAAMU,aAAX,UAA2B,EAAKZ,SAAUW,KAA1C,UAAkD,EAAKhB,MACvD,EAAKO,MAAMkB,eAAX,UAA6B,EAAKpB,SAAUW,KAA5C,UAAoDM,KAKxDI,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAU,EAAKtB,MAAMY,aAChEO,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,EAAKtB,MAAMa,YAC/DM,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,EAAKtB,MAAMc,UAC7DK,aAAaC,QAAQ,YAAaC,KAAKC,UAAU,EAAKtB,MAAMgB,SAC5DG,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAU,EAAKtB,MAAMU,eACnES,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAU,EAAKtB,MAAMkB,iBAEtE,EAAK3C,MAAMgD,QAAQlB,EAAMC,EAAKC,GAC9B,EAAKhC,MAAMiD,MAAK,GAEhBC,YAAW,WACP,EAAKlD,MAAMiB,kBAEZ,KA/BuC,4CAA9C,uDAiCGkC,OAAM,SAACpC,GACN,EAAKf,MAAMgD,QAAQ,CACfI,KAAM,oBACNC,KAAM,+BACNC,KAAM,iCACP,EAAKtD,MAAM+B,IAAK,MAEnB,EAAK/B,MAAMiB,mBAhDL,2CA3BK,wDA+EnBgB,IAAM,SAAAlB,GACF,EAAKQ,OAAS,MACdJ,SAASoC,uBAAuB,QAAQ,GAAGC,gBAAgB,SAC3DzC,EAAE0C,OAAOC,aAAa,QAAS,QAE/B,EAAKC,SAAS,CAAEjC,QADF,CAAEH,OAAQ,UAnFT,EAuFnBqC,KAAO,SAAA7C,GACH,EAAKQ,OAAS,OACdJ,SAASoC,uBAAuB,QAAQ,GAAGC,gBAAgB,SAC3DzC,EAAE0C,OAAOC,aAAa,QAAS,QAC/B,IACIhC,EAAU,CACVH,OAAQ,OACRS,QAAS,CACL,eAAgB,mBAChB,8BAA+B,KAGnC6B,KAAM,OACNC,KAAMhB,KAAKC,UATJ,KAWX,EAAKY,SAAS,CAAEjC,aAtGD,EAyGnBqC,IAAM,SAAAhD,GACF,EAAKQ,OAAS,MACdJ,SAASoC,uBAAuB,QAAQ,GAAGC,gBAAgB,SAC3DzC,EAAE0C,OAAOC,aAAa,QAAS,QAC/B,IACIhC,EAAU,CACVH,OAAQ,MACRS,QAAS,CACL,eAAgB,mBAChB,8BAA+B,KAEnC6B,KAAM,OACNC,KAAMhB,KAAKC,UARJ,KAUX,EAAKY,SAAS,CAAEjC,aAvHD,EA0HnBsC,OAAS,SAAAjD,GACL,EAAKQ,OAAS,SACdJ,SAASoC,uBAAuB,QAAQ,GAAGC,gBAAgB,SAC3DzC,EAAE0C,OAAOC,aAAa,QAAS,QAQ/B,EAAKC,SAAS,CAAEjC,QAPF,CACVH,OAAQ,SACRsC,KAAM,OACN7B,QAAS,CACL,eAAgB,wBAhIxB,EAAKP,MAAQ,CACTH,MAAO,gBACPI,QAAS,GACTW,WAAY,GACZC,UAAW,GACXC,QAAS,GACTE,OAAQ,GACRN,aAAc,CACV,IAAO,GACP,KAAQ,GACR,IAAO,GACP,OAAU,IAEdQ,eAAgB,CACZ,IAAO,GACP,KAAQ,GACR,IAAO,GACP,OAAU,KAGlB,EAAKzB,IAAM,GACX,EAAKK,OAAS,MAvBC,E,gEAuIE,IAAD,OAChB2B,YAAW,WACPe,QAAQC,IAAI,qBAEU,KAAlB,EAAKlE,MAAMmE,GACXF,QAAQC,IAAI,oBAGZD,QAAQC,IAAI,0BAGjB,O,+BAOH,OACI,yBAAKC,GAAG,QACJ,yBAAKA,GAAG,eACJ,yBAAKA,GAAG,WACJ,2BAAOC,IAAI,OAAX,QACA,2BAAOD,GAAG,QACV,4BAAQE,QAASC,KAAKxD,aAAtB,QAGJ,yBAAKqD,GAAG,WACJ,4BAAQA,GAAG,MAAMI,MAAM,OAAOF,QAASC,KAAKrC,KAA5C,OACA,4BAAQkC,GAAG,OAAOE,QAASC,KAAKV,MAAhC,QACA,4BAAQO,GAAG,MAAME,QAASC,KAAKP,KAA/B,OACA,4BAAQI,GAAG,SAASE,QAASC,KAAKN,QAAlC,iB,GAvKL/D,IAAMU,YC0EV6D,G,kNA1EbC,oBAAsB,SAAA1D,GACpB,IAAI2D,EAAU3D,EAAE0C,OAAOkB,YACnBC,EAAmBF,EAAQG,MAAM,KAAK,GACtCC,EAAgBJ,EAAQG,MAAM,KAAK,GAEnCE,EAAwBjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,qBACxDC,EAA0BpC,KAAKkC,MAAMpC,aAAaqC,QAAQ,wBAE1DE,EAAIJ,EAAsBH,GAAkBQ,QAAQN,GACpDtC,EAAM0C,EAAwBN,GAAkBO,GAGhDE,EAAmBvC,KAAKkC,MAAMpC,aAAaqC,QAAQ,kBAAkBzC,GACrE8C,EAAkBxC,KAAKkC,MAAMpC,aAAaqC,QAAQ,iBAAiBzC,GACnE+C,EAAgBzC,KAAKkC,MAAMpC,aAAaqC,QAAQ,eAAezC,GAC/DgD,EAAe1C,KAAKkC,MAAMpC,aAAaqC,QAAQ,cAAczC,GAEjErB,SAASC,eAAe,OAAOC,MAAQmE,EACvCrE,SAASC,eAAT,UAA2BkE,IAAmBG,QAK9C,EAAKzF,MAAMgD,QAAQuC,EAAe,EAAKvF,MAAM+B,IAAKsD,I,uDAG1C,IAAD,OACP,OACE,oCACE,yBAAKK,UAAS,kBAAapB,KAAKtE,MAAM2F,UACpC,4BACE,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCAEA,mCACA,mCACA,qCAIJ,yBAAKxB,GAAG,WACN,yBAAKA,GAAG,WACLG,KAAKtE,MAAM+B,IAAI5B,KAAI,SAACY,EAAG6E,GACtB,OACE,4BACEzB,GAAIyB,EAAMC,IAAKD,EAAMvB,QAAS,EAAKI,qBAElC1D,EAAEO,WAKX,0CAEA,6BACKwB,KAAKC,UAAUuB,KAAKtE,MAAMgC,QAAS,KAAM,IAH9C,cAOA,6BACKc,KAAKC,UAAUuB,KAAKtE,MAAM8F,QAAS,KAAM,W,GAnElC7F,IAAMU,YCuEboF,E,kDAnEb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IAQRgG,GAAK,SAAAjF,GACH,IAAIoD,EAAKpD,EAAE0C,OAAOU,GAClB,EAAKnE,MAAMiG,KAAK9B,IAXC,EAcnBM,oBAAsB,SAAA1D,GACpB,IAAI2D,EAAU3D,EAAE0C,OAAOkB,YACnBC,EAAmBF,EAAQG,MAAM,KAAK,GACtCC,EAAgBJ,EAAQG,MAAM,KAAK,GAEnCE,EAAwBjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,qBACxDC,EAA0BpC,KAAKkC,MAAMpC,aAAaqC,QAAQ,wBAE1DE,EAAIJ,EAAsBH,GAAkBQ,QAAQN,GACpDtC,EAAM0C,EAAwBN,GAAkBO,GAEhDE,EAAmBvC,KAAKkC,MAAMpC,aAAaqC,QAAQ,kBAAkBzC,GACrE+C,EAAgBzC,KAAKkC,MAAMpC,aAAaqC,QAAQ,eAAezC,GACnE,EAAKmB,SAAS,CAAEmC,QAASP,EAAevD,QAASqD,KAzBjD,EAAK5D,MAAQ,CACXqE,QAAS,GACT9D,QAAS,IAJM,E,qDAgCT,IAAD,OACP,OACE,yBAAKmC,GAAG,WACN,yBAAKA,GAAG,WACLG,KAAKtE,MAAM+B,IAAI5B,KAAI,SAACY,EAAG6E,GACtB,OACE,6BACE,4BACEzB,GAAIyB,EACJC,IAAKD,EACLvB,QAAS,EAAKI,qBAEb1D,EAAEO,OAEJ,kBAAC,IAAD,CAAMb,GAAG,IAAI0D,GAAIyB,EAAMvB,QAAS,EAAK2B,IAArC,eAKT,0CAEE,6BACGlD,KAAKC,UAAUuB,KAAK7C,MAAMO,QAAS,KAAM,IAH9C,cAOE,6BACGc,KAAKC,UAAUuB,KAAK7C,MAAMqE,QAAS,KAAM,U,GA7DhC7F,IAAMU,WC+DbuF,G,wDApDX,WAAYlG,GAAQ,IAAD,8BACf,cAAMA,IAUVmG,WAAa,SAACL,EAAS/D,EAAKC,GACxB,EAAK2B,SAAS,CAAEmC,UAAS/D,MAAKC,aAZf,EAenBoE,YAAc,SAACC,GACX,EAAK1C,SAAS,CAAE0C,UAhBD,EAmBnBpF,cAAgB,WACZ,EAAK0C,SAAS,CAAEgC,SAAU,EAAKlE,MAAMkE,WApBtB,EAuBnBM,KAAO,SAAC9B,GACJ,EAAKR,SAAS,CAAEQ,QAtBhB,EAAK1C,MAAQ,CACTqE,QAAS,GACT/D,IAAK,GACLC,QAAS,GACTqE,MAAM,EACNV,SAAS,EACTxB,GAAI,IARO,E,qDA4Bf,OACI,kBAAC,IAAMmC,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,CAAMtF,IAAKoD,KAAK7C,MAAMP,IAAKa,IAAKuC,KAAK7C,MAAMM,IAAKkB,KAAMqB,KAAK8B,YAAapD,QAASsB,KAAK6B,WAAYlF,cAAeqD,KAAKrD,gBACtH,kBAAC,EAAD,CAAYpB,UAAWyE,KAAK7C,MAAM4E,MAC9B,kBAAC/F,EAAD,KACI,kBAAC,EAAD,CAAU2F,KAAM3B,KAAK2B,KAAM9B,GAAIG,KAAK7C,MAAM0C,GAAKnB,QAASsB,KAAK6B,WAAYL,QAASxB,KAAK7C,MAAMqE,QAAS/D,IAAKuC,KAAK7C,MAAMM,IAAKC,QAASsC,KAAK7C,MAAMO,QAAS2D,QAASrB,KAAK7C,MAAMkE,WAEhL,kBAACpF,EAAD,KACI,yBAAK4D,GAAG,eAKpB,kBAAC,IAAD,CAAOoC,KAAK,WAAWC,OAAK,GACxB,kBAAC,EAAD,CAASP,KAAM3B,KAAK2B,KAAMlE,IAAKuC,KAAK7C,MAAMM,OAE9C,kBAAC,EAAD,W,GA/CE9B,IAAMU,YCTlB8F,E,uKAEF,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,W,GAJWxG,IAAMU,WAUnB+F,EAAcvF,SAASC,eAAe,QAC5CuF,IAAS/G,OAAO,kBAAC,EAAD,MAAU8G,K","file":"static/js/main.2c3cd6b4.chunk.js","sourcesContent":["import React from 'react';\n\nconst render = (condition = false , children = null) => {\n    return condition ? children : null;\n};\n\n// IfRenderer component\nexport const IfRenderer = props => \n    React.Children.map(props.children, child =>\n        React.cloneElement(child, {condition: props.condition})\n    ); \n\n// Then component \nexport const Then = props => render(props.condition, props.children);\n\n// Else component\nexport const Else = props => render(!props.condition, props.children);","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport './styles/header.scss';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <NavLink to=\"/history\" activeClassName=\"history\">History</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\n\n\nexport default Header;","import React from 'react';\nimport './styles/footer.scss'\n\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy;2021 Ruwaid</footer>;\n  }\n}\n\nexport default Footer;","import React from 'react';\n\n\nimport './styles/form.scss'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            words: 'initial State',\n            options: {},\n            headersArr: [],\n            methodArr: [],\n            bodyArr: [],\n            urlArr: [],\n            metodeUrlObj: {\n                'GET': [],\n                'POST': [],\n                'PUT': [],\n                'DELETE': [],\n            },\n            metodeUrlObjID: {\n                'GET': [],\n                'POST': [],\n                'PUT': [],\n                'DELETE': [],\n            },\n        };\n        this.url = '';\n        this.method = 'GET';\n\n    }\n\n    handleClick = async e => {\n        this.props.toggleLoading();\n\n        this.url = document.getElementById('url').value;\n        let words = `${this.method}!${this.url}`;\n\n\n\n        fetch(`${this.url}`, this.state.options).then(async (raw) => {\n            let data = await raw.json();\n            let all = this.props.all;\n            let headers = raw.headers.get('content-type');\n            this.props.all.push({ words });\n\n            if (!this.state.metodeUrlObj[this.method].includes(this.url)) {\n                this.state.headersArr.push(headers);\n                this.state.methodArr.push(this.method);\n                this.state.bodyArr.push(data);\n                let idx = this.state.urlArr.length;\n                this.state.urlArr.push(this.url);\n                this.state.metodeUrlObj[`${this.method}`].push(`${this.url}`);\n                this.state.metodeUrlObjID[`${this.method}`].push(`${idx}`);\n            }\n\n\n\n            localStorage.setItem('headers-state', JSON.stringify(this.state.headersArr));\n            localStorage.setItem('method-state', JSON.stringify(this.state.methodArr));\n            localStorage.setItem('body-state', JSON.stringify(this.state.bodyArr));\n            localStorage.setItem('URL-state', JSON.stringify(this.state.urlArr));\n            localStorage.setItem('Method-URL-state', JSON.stringify(this.state.metodeUrlObj));\n            localStorage.setItem('Method-URL-ID-state', JSON.stringify(this.state.metodeUrlObjID));\n\n            this.props.handler(data, all, headers);\n            this.props.show(true)\n            // no need for settimeout just to see the loader because loader is coooool \n            setTimeout(() => {\n                this.props.toggleLoading();\n\n            }, 1000);\n\n        }).catch((e) => {\n            this.props.handler({\n                msg1: 'Error Error Error',\n                msg2: 'maybe you do not have access',\n                msg3: 'maybe your request is wrooong',\n            }, this.props.all, null);\n\n            this.props.toggleLoading();\n        });\n    }\n\n    get = e => {\n        this.method = 'GET'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = { method: 'GET' }\n        this.setState({ options })\n    }\n\n    post = e => {\n        this.method = 'POST'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let data = {};\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n\n            },\n            mode: 'cors',\n            body: JSON.stringify(data),\n        }\n        this.setState({ options })\n    }\n\n    put = e => {\n        this.method = 'PUT'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let data = {};\n        let options = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            mode: 'cors',\n            body: JSON.stringify(data),\n        }\n        this.setState({ options })\n    }\n\n    delete = e => {\n        this.method = 'DELETE'\n        document.getElementsByClassName('aqua')[0].removeAttribute('class');\n        e.target.setAttribute('class', 'aqua');\n        let options = {\n            method: 'DELETE',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        this.setState({ options })\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            console.log('iiiiiiiiiiiiiiiii');\n            \n            if (this.props.id === '') {\n                console.log('pppppppppppppppp');\n    \n            } else {\n                console.log('qqqqqqqqqqqqqqqqqqqq');\n    \n            } \n        }, 1000);\n\n    }\n\n\n    render() {\n\n        return (\n            <div id='form'>\n                <div id='main-header'>\n                    <div id='url-div'>\n                        <label for='url'>URL:</label>\n                        <input id='url'></input>\n                        <button onClick={this.handleClick}>GO!</button>\n                    </div>\n\n                    <div id='buttons'>\n                        <button id='GET' class='aqua' onClick={this.get}>GET</button>\n                        <button id='POST' onClick={this.post}>POST</button>\n                        <button id='PUT' onClick={this.put}>PUT</button>\n                        <button id='DELETE' onClick={this.delete}>DELETE</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport './styles/results.scss'\n\nclass Results extends React.Component {\n\n  getFormLocalStorage = e => {\n    let content = e.target.textContent;\n    let methodFromButton = content.split('!')[0];\n    let urlFromButton = content.split('!')[1];\n\n    let metodeUrlObjFromLocal = JSON.parse(localStorage.getItem('Method-URL-state'));\n    let metodeUrlObjIDFromLocal = JSON.parse(localStorage.getItem('Method-URL-ID-state'));\n\n    let x = metodeUrlObjFromLocal[methodFromButton].indexOf(urlFromButton)\n    let idx = metodeUrlObjIDFromLocal[methodFromButton][x]\n\n\n    let headersFromLocal = JSON.parse(localStorage.getItem('headers-state'))[idx];\n    let methodFromLocal = JSON.parse(localStorage.getItem('method-state'))[idx];\n    let bodyFromLocal = JSON.parse(localStorage.getItem('body-state'))[idx];\n    let URLFromLocal = JSON.parse(localStorage.getItem('URL-state'))[idx];\n\n    document.getElementById('url').value = URLFromLocal;\n    document.getElementById(`${methodFromLocal}`).click();\n\n    // let lowerCaseMethod = methodFromLocal.toLowerCase();\n    // this[`${lowerCaseMethod}`]();\n\n    this.props.handler(bodyFromLocal, this.props.all, headersFromLocal);\n  }\n\n  render() {\n    return (\n      <>\n        <div className={`loading-${this.props.loading}`}>\n          <h1>\n            <span>L</span>\n            <span>O</span>\n            <span>A</span>\n            <span>D</span>\n            <span>I</span>\n            <span>N</span>\n            <span>G</span>\n\n            <span>.</span>\n            <span>.</span>\n            <span>.</span>\n          </h1>\n\n        </div>\n        <div id='content'>\n          <div id='history'>\n            {this.props.all.map((e, indx) => {\n              return (\n                <button\n                  id={indx} key={indx} onClick={this.getFormLocalStorage}\n                >\n                  {e.words}\n                </button>\n              )\n            })}\n          </div>\n          <div>\n            \"Headers\":\n          <pre>\n              {JSON.stringify(this.props.headers, null, 2)}\n            </pre>\n\n          \"Response\":\n          <pre>\n              {JSON.stringify(this.props.results, null, 2)}\n            </pre>\n          </div>\n        </div >\n      </>\n    )\n  }\n}\n\nexport default Results;","import React from 'react';\nimport './styles/results.scss'\n\nimport { Link } from \"react-router-dom\";\n\nclass History extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: {},\n      headers: {},\n\n    }\n  }\n\n  uu = e => {\n    let id = e.target.id;\n    this.props.fill(id);\n  }\n\n  getFormLocalStorage = e => {\n    let content = e.target.textContent;\n    let methodFromButton = content.split('!')[0];\n    let urlFromButton = content.split('!')[1];\n\n    let metodeUrlObjFromLocal = JSON.parse(localStorage.getItem('Method-URL-state'));\n    let metodeUrlObjIDFromLocal = JSON.parse(localStorage.getItem('Method-URL-ID-state'));\n\n    let x = metodeUrlObjFromLocal[methodFromButton].indexOf(urlFromButton)\n    let idx = metodeUrlObjIDFromLocal[methodFromButton][x]\n\n    let headersFromLocal = JSON.parse(localStorage.getItem('headers-state'))[idx];\n    let bodyFromLocal = JSON.parse(localStorage.getItem('body-state'))[idx];\n    this.setState({ results: bodyFromLocal, headers: headersFromLocal })\n  }\n\n\n\n  render() {\n    return (\n      <div id='content'>\n        <div id='history'>\n          {this.props.all.map((e, indx) => {\n            return (\n              <div>\n                <button\n                  id={indx}\n                  key={indx}\n                  onClick={this.getFormLocalStorage}\n                >\n                  {e.words}\n                </button>\n                {<Link to=\"/\" id={indx} onClick={this.uu} >RE-Run</Link>}\n              </div>\n            )\n          })}\n        </div>\n        <div>\n          \"Headers\":\n          <pre>\n            {JSON.stringify(this.state.headers, null, 2)}\n          </pre>\n\n          \"Response\":\n          <pre>\n            {JSON.stringify(this.state.results, null, 2)}\n          </pre>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default History;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n\nimport { IfRenderer, Then, Else } from './if';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport Results from './results';\nimport History from './history';\nimport './styles/results.scss'\nimport './styles/style.scss';\n\n\n//class App\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            results: {},\n            all: [],\n            headers: '',\n            open: false,\n            loading: false,\n            id: '',\n        };\n    }\n    handleForm = (results, all, headers) => {\n        this.setState({ results, all, headers });\n    }\n\n    toggleModal = (open) => {\n        this.setState({ open });\n    }\n\n    toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n    fill = (id) => {\n        this.setState({ id })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <Route path=\"/\" exact>\n                    <Form url={this.state.url} all={this.state.all} show={this.toggleModal} handler={this.handleForm} toggleLoading={this.toggleLoading} />\n                    <IfRenderer condition={this.state.open} >\n                        <Then>\n                            <Results  fill={this.fill} id={this.state.id}  handler={this.handleForm} results={this.state.results} all={this.state.all} headers={this.state.headers} loading={this.state.loading} />\n                        </Then>\n                        <Else>\n                            <div id='content'></div>\n                        </Else>\n                    </IfRenderer>\n                </Route>\n\n                <Route path=\"/history\" exact>\n                    <History fill={this.fill} all={this.state.all} />\n                </Route>\n                <Footer />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>);\n  }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}